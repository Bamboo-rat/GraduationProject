spring.application.name=backend
server.port=8080

# ===============================
# = DATASOURCE (LOCAL MYSQL)
# ===============================
# For local development, use localhost MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/SaveFood?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:123456}

# ===============================
# = DATASOURCE (AWS RDS) - Commented out for local development
# ===============================
spring.datasource.url=${DB_URL:jdbc:mysql://foodsave.cbqgwoyam2lh.ap-southeast-2.rds.amazonaws.com:3306/foodsave?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
spring.datasource.username=admin
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:E0MvlgcXl1UD2nBpf5A9}

# HikariCP Configuration
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.datasource.tomcat.initSQL=SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci

# Transaction Isolation Level
# 1 = READ_UNCOMMITTED, 2 = READ_COMMITTED, 4 = REPEATABLE_READ, 8 = SERIALIZABLE
# Using REPEATABLE_READ to prevent phantom reads and non-repeatable reads
spring.jpa.properties.hibernate.connection.isolation=4

# Optimistic Locking Configuration
# Throw exception when version mismatch detected
spring.jpa.properties.javax.persistence.lock.timeout=5000

# ===============================
# KEYCLOAK CONFIGURATION
# ===============================
keycloak.auth-server-url=${KEYCLOAK_AUTH_SERVER_URL}
keycloak.realm=${KEYCLOAK_REALM}
keycloak.resource=${KEYCLOAK_RESOURCE}
keycloak.customer.client-secret=${KEYCLOAK_CLIENT_SECRET}

keycloak.admin.username=${KEYCLOAK_ADMIN_USERNAME}
keycloak.admin.password=${KEYCLOAK_ADMIN_PASSWORD}
keycloak.admin.client-id=${KEYCLOAK_ADMIN_CLIENT_ID}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_AUTH_SERVER_URL}/realms/${KEYCLOAK_REALM}


# ===============================
# SENDGRID CONFIGURATION
# ===============================
sendgrid.api-key=${SENDGRID_API_KEY}
sendgrid.from-email=${SENDGRID_FROM_EMAIL}
sendgrid.from-name=${SENDGRID_FROM_NAME}

# ===============================
# APPLICATION CONFIGURATION
# ===============================
app.frontend-url=${FRONTEND_URL}
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS}

# ===============================
# CLOUDINARY CONFIGURATION
# ===============================
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# Folder names for organizing files
cloudinary.folder.business-licenses=business-licenses
cloudinary.folder.food-safety-certificates=food-safety-certificates
cloudinary.folder.banner=banner
cloudinary.folder.products=products
cloudinary.folder.avatar-customer=avatar-customer
cloudinary.folder.avatar-admin=avatar-admin
cloudinary.folder.supplier-logo=supplier-logo


# ===============================
# REDIS CONFIGURATION
# ===============================
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=60000